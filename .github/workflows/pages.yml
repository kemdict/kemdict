name: Deploy

on:
  push:
    branch:
      - main
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: "pages"
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  "build":
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Fetch tags for release purposes
        run: |
          git fetch --depth=2 --tags
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
          cache-dependency-path: "web/package-lock.json"
      - name: Set up SSH
        env:
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
          SSH_SECRET: ${{ secrets.SSH_SECRET }}
        run: |
          mkdir -p ~/.ssh
          printenv SSH_KNOWN_HOSTS >> ~/.ssh/known_hosts
          printenv SSH_SECRET > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      - name: Install packages
        run: |
          cd web && npm install
      - name: Build
        run: |
          cd web
          make build-no-data
      - name: Deploy node
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          cd web
          tar -czf built-node.tar.gz -a built-node
          rsync built-node.tar.gz "$SSH_HOST":/home/kisaragi
          ssh "$SSH_HOST" bash << HERE
            tar -xf built-node.tar.gz
            rm built-node.tar.gz
            mkdir -p deployed
            test -d deployed/kemdict && rm -r deployed/kemdict
            mv built-node deployed/kemdict
            systemctl restart --user kemdict
          HERE
        shell: bash
