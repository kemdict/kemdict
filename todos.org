* done
** DONE make it possible to turn off pronunciation search
I wanted to search for words with “-” in them but the result is 100000+ entries long.

Done: use =title:"-"= to do the search above.
** DONE [#A] Word page: split sections for each language like goo辞書
** DONE [#A] Search without tones
** DONE Search: put exact match on top
** DONE search: Just generate pages for each language
** DONE make it possible to filter language
2023-05-10T23:06:45+0900: It is /possible/ now, but not obvious. You have to search something present in the language you want, open the language tab, then search the thing you actually want to search.
** DONE search: only redirect in prefix mode
in suffix and contains it's jarring to redirect, actually
** DONE reflect db schema update

- [X] =stroke_count= → =sc=
- [X] =non_radical_stroke_count= → =nrsc=
- [X] =definition= → =def=
- [X] =definitions= → =defs=
- [X] Collected pronunciations are in their own table and not a JSON field

** DONE add stroke info for 首字索引
** DONE history for search
just 3 entries would be useful
** DONE Import Unihan database for at least strokes

After installing from Pip,

#+begin_src shell
unihan-etl -F json -f kAccountingNumeric kCangjie kCompatibilityVariant kDefinition kMandarin kOtherNumeric kPhonetic kPrimaryNumeric kRSUnicode kSemanticVariant kSimplifiedVariant kSpecializedSemanticVariant kTotalStrokes kTraditionalVariant kZVariant
#+end_src

Then somehow merge it into the database.

** DONE Access het.title instead of het.props.title
The two are supposed to be the same, ie. the latter shouldn't need to exist.
** DONE less han-centric: eg. =/word/in= should show words / heteronyms which have title = in or pronunciation = in
See https://www.weblio.jp/content/わ for what I want

- Return multiple word objects from word/server
- Accept multiple word objects in word/page
** DONE data: heteronyms-based
- [X] heteronyms-based data storage
- [X] word page.server.js
- [X] word page
- [X] word components
- [X] word preview
- [X] search page.server.js
- [X] search page
** CANCELLED Search sort button needs to be styled
:LOGBOOK:
- State "CANCELLED"  from "TODO"       [2023-01-28 Sat 02:23] \\
  Sort is disabled for now
:END:

** DONE pronunciation search
- [X] Merge “pronunciation search” and Han character search
  - It's not necessarily just “pronunciations”
- [X] implement for hakkadict
- [X] Prefix and suffix search
- [X] Fix the “matching on JSON string” atrocity
** DONE [#A] Search page: split sections for each language
** DONE fix a-a cham-cham
** DONE update robots.txt to allow =/word/= to be indexed
** DONE update thanks, which is missing attribution to ChhoeTaigi and Taigi dictionaries
** DONE Fallback: Noto CJK isn't good enough

𪜶 (for “their” in Taigi), for instance
(Unicode SIP, #x2A736)

Options:

- Iansui (like ChhoeTaigi)
- openhuninn

Possible options:

- Whatever MOE or moedict is using
- https://en.m.wikipedia.org/wiki/Open-source_Unicode_typefaces
- https://www.babelstone.co.uk/Fonts/Han.html
- 花園明朝 (it has an extension)
** DONE try duckdb
** DONE Don't show keyboard shortcut on mobile (max-sm:hidden)
** DONE [#A] TOC: split sections for each language
** DONE Add C-k shortcut display to searchbar
** DONE A way to copy anchored links from the word page
  - See, for instance, NodeJS docs as a reference https://nodejs.org/api/esm.html#enabling
  - Or Svelte's docs: https://svelte.dev/docs#compile-time-svelte-preprocess
** DONE Incorporate [[https://github.com/ChhoeTaigi/ChhoeTaigiDatabase/tree/master/ChhoeTaigiDatabase][iTaigi data]] (CC0)

Thank you Chhoe Taigi and iTaigi

- Data
- Word rendering
** DONE split dicts into its own repository
** DONE Fix concised dict formatting
Check the entry for 上
** DONE [#A] Table of contents
list of dictionaries at top of word page to quickly navigate to
plus the backlinks, “elsewhere”, and copyright sections
** DONE [#A] Backlinks
- Go through every definition to find links
  - Requires a common shape for the definition text
  - Right now it's either =word.heteronyms[n].definitions= or =word.heteronyms[n].definition= (n ∈ 0+)
  - The former is moedict-twblg and kisaragi-dict, the latter is kemdict/kemdict-data-ministry-of-education
  - We should flatten moedict-twblg and kisaragi-dict.
- Store links either as a table of =from, to= rows or in a column (with a JSON array) in the =entries= table?
** DONE an outgoing link component + outgoing indicator
** DONE [#A] Search by pronunciation (non-Han character search)
- For Mandarin, do we want to support pinyin?
- We want to support searching Taigi or Hakka with or without tones because I assume most speakers have not learned which tone is which…?
** DONE search: prefix, suffix, infix

- [X] Add a dropdown to select “begins with”, “ends with”, “includes”
- [X] Hook it up to the search view

** DONE there should be a separate “no search result” page
** DONE Add sitemap
** DONE Add robots.txt
** DONE Investigate memory leaks
It was being OOM killed because of other services on the same machine, (probably) not because of memory leaks.
** DONE Use a persistent database instead of spinning up an SQLite DB on every request
- Supabase should… work?
  - Find a way to get the dictionaries in there first
- Or just, you know, adapter-node on a VPS and cache with Cloudflare. We really don't need the infinite scaling.
  - This is what I'm using now.
** DONE =dict_concised=: add links to [例]A、B、C
** DONE kisaragi-dict: use HTML in text content freely
(sort of: Org content can be used freely, but I have to override parts of org-element-interpret-data to make it emit HTML)
** DONE kisaragi-dict: transform Org links to HTML links during the data process step
** DONE Search page; searchbar should submit to search page; server side prefix suffix infix (fuzzy?) search, ideally instant when switching modes
** DONE Do not send all words to client side
- This contributes to a lot of the jank
** sveltekit version release checklist
- [X] Make sure it works on ancient browsers (probably)
- [X] Make sure it works on browsers without JS (EWW, for instance)
- [X] Switch DNS to point to Netlify instead of GitHub Pages
** DONE Some hakkadict entries, like =後生毋肯學,老來無安樂=, do not have ids
** DONE Use SvelteKit version as main version
- We could then do the searching on the server side and avoid having to build 170000+ pages
** DONE mobile: include fonts (or use system fonts)
** DONE Incorporate Ministry of Education's Hakka dictionary
[[https://hakkadict.moe.edu.tw/cgi-bin/gs32/gsweb.cgi/ccd=ChLpKc/description?id=MSA00000041&opt=opt2][It's also CC-BY-ND 3.0 TW]].
- [X] Add it to [[https://github.com/kemdict/kemdict-data-ministry-of-education][kemdict-data-ministry-of-education]]
- [X] Write the word template code for it
** DONE All titles should be written out as a file.
** DONE References should only be linked if it is available.
** DONE More dynamic search bar (which already requires JS)
- We can avoid including titles.json in every file by just copying it to the output. We then have to do a request for it every time though. This is another case for rendering on first request.
** DONE A 404 page
** DONE Consider using Eleventy Serverless because we're on track to a million files in one folder at this rate. Although, who knows, maybe that's actually fine: https://stackoverflow.com/questions/197162/ntfs-performance-and-large-volumes-of-files-and-directories
** DONE Fix stray <li>s for words without a type
** DONE Add links to search word in Moedict, Wiktionary, etc.
** DONE Copyright information for each dictionary like Weblio's footer
** DONE Dictionary header should link to the original dictionary, preferably to the same term
** DONE Make the search bar appear as if it's another window
** DONE =dict_idioms=: fix description in 一枕南柯
** DONE Fix search results not clickable
** DONE =dict_idioms=: fix showing missing fields
** DONE 更新重編國語辭典到最新
** DONE taigi: don't use ruby to display POJ
** DONE Figure out how to decode the ={[xxxx]}= thing
No longer applicable as we don't use moedict-data anymore.
** DONE Add metadata
** DONE List (10) new words from kisaragi-dict at home page
(Listing new words from MOE dictionaries requires keeping a record of all words from a previous version and comparing them with the current list. Doable but not relevant right now.)
** DONE Include information for when an entry was added in kisaragi-dict
** DONE Figure out an icon
** DONE [#A] Make copyright information more clear
** DONE build mobile version with Expo
** DONE =dict_idioms=: add the △ ◎ symbols as documented [[https://dict.idioms.moe.edu.tw/pageView.jsp?ID=41][here]]

#+begin_quote
常用符號一覽表

| 常用符號 | 代表意義                                 | 出現位置             |
|----------+------------------------------------------+----------------------|
| ※        | 表成語所取典源尚有疑慮。                 | 「釋義」、「典源」欄 |
| ＃       | 表成語所取典源與既有成語辭書有所參差     | 「釋義」、「典源」欄 |
| ◎        | 表成語除主要典源外，另收又見資料         | 「釋義」、「典源」欄 |
| △        | 表另有可互見參酌之其他成語               | 「釋義」欄           |
| ■        | 表與主要典源內容不同之參考資料有一筆以上 | 「典源」欄           |
#+end_quote
* Adding a dictionary
- kemdict-data: add code to download the raw data at build time
- kemdict-data: update process-data.el to include the new dictionary in the intermediate json file
- update [[file:./web/src/routes/word/\[word\]/+page.svelte][word page]] to use the right component for the new dictionary
- most likely, write a new word component for the new dictionary
- update dictionary list in common.js, README, and root route
- update copyright information
* Testing
- Does search work?
  - "a", "a p" (prefix, suffix), "無妨", "zzz", "一"
  - Language tabs
  - Pagination
- Does word page rendering work?
  - "無妨" (taijit, concised, revised, =moedict_twblg=)
  - "實聯制" (kisaragi, itaigi)
- About
- Initial index + pagination, Radical index
* Why not make the DB its own service

I'm still not sure, but

- The network latency might be worse than running DB queries regardless of caching
- More attack vectors (?)
- Another interface to maintain within the same app

* todos
** 譜系分類法 (=dict_revised=) is broken
** New link style to make texts easier to read
** digitize [[http://ip194097.ntcu.edu.tw/memory/TGB/thak.asp?id=59&page=1][1928 台灣植物名彙]]
The existing digitization only includes POJ/KIP and HanLo.

The book uses POJ for Taiwanese (and even includes an introduction to POJ and Taiwanese tones).

Digitize the first pages, then when you get to the entries, write them down in YAML. Use an Emacs command to automate some of it if you want.

Each entry is:

- scientific name (the word(s) after the comma are the name of the person who published the scientific name; this convention is still alive to this day)
- Japanese name (in Romaji)
- Taiwanese name「和名の次に本島語即ち福建語及廣東語を挿入し…」(in POJ)
- Aboriginals name (including which people)
- Where it's found
- [category and such]
** TODO [#A] 服務條款、隱私權條款
** TODO link to share on Twitter, Facebook, or just copy the URL
