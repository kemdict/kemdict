---
import { getHetFromUrl } from "$src/server/db";
import { dicts, langs, WordSortFns, getSearchTitle } from "common";

const url = Astro.url;
const [success, data] = await getHetFromUrl(url);
if (!success) {
  return Astro.redirect(data);
}
const heteronyms = data.heteronyms;
const mtch = data.mtch;
const query = data.query;
const langSet = data.langSet;

let count = heteronyms.length;

const presentLangs = Object.entries(langs).filter((l) => langSet.has(l[0]));
let currentLang: string =
  url.searchParams.get("lang") ||
  (presentLangs[0] && presentLangs[0][0]) ||
  "zh_TW";

import WordPreview from "$src/components/WordPreview.svelte";
import Elsewhere from "$src/components/Elsewhere.astro";
import SingleLayout from "$src/SingleLayout.astro";

import Results from "./Results.svelte";
import Abb from "./Abb.svelte";

const title = getSearchTitle(mtch, query);
const titleMarkup = getSearchTitle(mtch, query, true);
---

<SingleLayout
  title={`${title} - kemdict 搜尋結果`}
  initialMatchSelection={mtch}
  initialInput={query}
  showMatchTypes={true}
>
  <Fragment slot="head">
    <meta name="description" content="搜尋 kemdict" />
  </Fragment>
  {
    count === 0 ? (
      <div class="prose">
        <h1>「{query}」的搜尋結果</h1>
        <p>找不到{title}。</p>
        <hr />
        <Elsewhere term={query} />
      </div>
    ) : (
      <>
        <h1 class="mt-8 text-2xl" set:html={titleMarkup} />
        {presentLangs.map((lang) => (
          <Abb
            lang={lang}
            heteronyms={heteronyms}
            currentParams={url.searchParams}
          />
        ))}
      </>
    )
  }
</SingleLayout>
