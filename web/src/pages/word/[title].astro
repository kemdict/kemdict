---
import { uniq } from "lodash-es";
import { DB } from "$src/server/db";
import {
  site,
  dictsObj,
  dicts,
  langs,
  joinLast,
  groupByProp,
  parseLangParam,
} from "common";
import type { Dict, Heteronym } from "common";

const { title } = Astro.params;
const {
  presentDicts: presentDictIds,
  presentLangSet,
  heteronyms,
} = await DB.getHeteronyms(title);
const titles = uniq(heteronyms.map((het: Heteronym) => het.title));
const backlinks = (await DB.getBacklinks(...titles)).sort();

import SingleLayout from "$src/SingleLayout.astro";
import { Tab, TabGroup } from "@skeletonlabs/skeleton";
import Elsewhere from "$src/components/Elsewhere.astro";
import WordList from "$src/components/WordList.svelte";
import Word from "./Word.svelte";
import WordTabs from "./WordTabs.svelte";

let term_ja = title;
let term_en = title;
const groupedHets: [Dict, Heteronym[]][] = groupByProp(heteronyms, "from").map(
  ([id, hets]: [string, Heteronym[]]) => {
    // Implement the logic for eq-ja / eq-en
    if (id === "kisaragi_dict") {
      const eq_ja = hets.find((het) => het.props["eq-ja"])?.props["eq-ja"];
      if (eq_ja) term_ja = eq_ja;
      const eq_en = hets.find((het) => het.props["eq-en"])?.props["eq-en"];
      if (eq_en) term_en = eq_en;
    }
    return [dictsObj[id], hets];
  }
);
const presentDicts = presentDictIds.map((id) => dictsObj[id]);

const url = Astro.url;
const requestedLang = parseLangParam(
  url.searchParams.get("lang"),
  presentLangSet
);
// Invalid -> delete it and try again
if (requestedLang === false) {
  url.searchParams.delete("lang");
  return Astro.redirect(url);
}
---

<script>
  import { saveHistory } from "$src/localStorage";
  const url = new URL(location.href);
  /* import { langs, parseLangParam } from "common"; */
  /* const langSet = new Set(Object.keys(langs)); */
  /* const requestedLang = parseLangParam(url.searchParams.get("lang"), langSet); */
  // FIXME: save language as well. Requires WordList to support it as well
  saveHistory("word", url.pathname.replace("/word/", ""));
</script>

{
  heteronyms.length > 0 ? (
    <SingleLayout
      title={`「${title}」的意思 - ${site.title}`}
      initialInput={title}
    >
      <Fragment slot="head">
        <meta
          property="og:image"
          content={`https://kemdict.com/og-image?title=${encodeURI(
            `「${title}」的定義`
          )}`}
        />
        <meta
          name="description"
          content={`「${title}」在${langs[requestedLang]}的意思。來自${joinLast(
            presentDicts
              .filter((dict) => dict.lang === requestedLang)
              .map((dict) => dict.name),
            "、",
            "及"
          )}的定義。 - ${site.oneLineDesc}`}
        />
      </Fragment>
      <div class="">
        <WordTabs
          client:load
          title={title}
          presentLangs={[...presentLangSet]}
          requestedLang={requestedLang}
          currentParamString={url.searchParams.toString()}
        />
        {groupedHets.map(
          ([dict, hets]) =>
            requestedLang === dict.lang && (
              <Word groupedHets={[[dict, hets]]} title={title} />
            )
        )}
        <hr />
        <Elsewhere term={title} term_ja={term_ja} term_en={term_en} />
        {backlinks.length > 0 && (
          <div class="prose">
            <h3>有提到「{title}」的條目</h3>
            <WordList words={backlinks} client:load />
          </div>
        )}
      </div>
    </SingleLayout>
  ) : (
    <SingleLayout
      title={`找不到「${title}」 - Kemdict 國語整合典`}
      class="prose"
    >
      <h1>{title}</h1>
      <p>找不到這個詞。</p>
      <hr />
      <Elsewhere term={title} />
    </SingleLayout>
  )
}
