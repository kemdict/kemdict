@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  html {
    line-height: 1.6;
  }
  rt {
    font-size: 70%;
  }
  blockquote {
    @apply rounded px-4 py-1;
    @apply bg-gray-200 dark:bg-stone-700;
  }
  hr {
    @apply border-gray-400;
    @apply my-8 mx-auto w-[95%];
  }
  body {
    @apply relative mt-12;
    @apply bg-white dark:bg-stone-900;
    @apply dark:text-white;
    @apply fade;
    &:focus-visible {
      outline: none;
    }
  }
  .base {
    width: 95%;
    @apply m-auto mb-24 max-w-4xl;
  }
  ol {
    @apply pl-4;
  }
}

@layer components {
  /* Put it here for more readable comments. */
  div.split-layout {
    @apply relative;
    /* HACK this works around the left slot clipping into content that
       comes after the split layout.

       Honestly we should just use a grid.
    */
    @apply sm:min-h-[32rem];
    & > div {
      /* The gap between the left edge of the container and the right slot */
      @apply sm:ml-[15rem] md:ml-[18rem];
      & > div.left {
        /* The right slot position minus the gap (2rem) we want between left
           and right */
        @apply sm:w-[12rem] md:w-[15rem];
        /* Actually place it on the left */
        @apply sm:absolute sm:top-4 sm:left-4;
        /* Style for when it's collapsed */
        .fixed {
          @apply sm:w-[12rem] md:w-[15rem];
        }
      }
    }
  }
  /* Search Form */
  #sf {
    input,
    select {
      @apply px-2 py-1;
      @apply fade;
    }
    kbd {
      @apply font-bold text-gray-400;
    }
  }
  .wordlink {
    @apply btn py-1 px-2 font-bold;
    &:hover {
      @apply no-underline;
    }
  }
  .dict {
    @apply mt-12 mb-2 border-b;
    @apply border-black dark:border-stone-500;
    @apply flex justify-between;
  }
  .toc,
  .def {
    a {
      @apply link;
    }
  }
  .prose {
    /* This is the sort of style generated by @tailwindcss/typography.
       This selector will not override utilities. */
    :where(p):not(:where([class~="not-prose"] *)) {
      @apply my-2;
    }
    :where(h1):not(:where([class~="not-prose"] *)),
    :where(h2):not(:where([class~="not-prose"] *)),
    :where(h3):not(:where([class~="not-prose"] *)) {
      @apply font-bold;
    }
    :where(h1):not(:where([class~="not-prose"] *)) {
      @apply mt-8 mb-4 text-xl;
    }
    :where(h2):not(:where([class~="not-prose"] *)) {
      @apply mt-6;
    }
    :where(a):not(:where([class~="not-prose"] *)) {
      @apply link;
    }
    :where(ul):not(:where([class~="not-prose"] *)) {
      list-style-type: "– ";
      @apply pl-4;
    }
    :where(ol):not(:where([class~="not-prose"] *)) {
      @apply list-decimal;
    }
  }
  .word {
    .copyright {
      @apply mt-6 mb-2 text-right text-sm opacity-75;
    }
    transition-property: max-height;
    transition-duration: 250ms;
    transition-timing-function: ease-in-out;
    overflow: hidden;
    h1,
    h2,
    h3 {
      @apply font-bold;
    }
    a {
      @apply link;
    }
    h1 {
      @apply mt-8 text-2xl first:mt-4;
    }
    h2 {
      @apply mt-4 text-2xl;
    }
    h3 {
      @apply mb-0 mt-2;
    }
    ol {
      padding-left: 1.5rem;
      @apply list-decimal;
    }
    li {
      @apply mt-2;
    }
    li:first-child {
      @apply mt-0;
    }
    /* m for Mark. The "例" "英" "反" sort of marker */
    m {
      @apply inline-block w-6 px-1 font-bold;
    }
    .pos {
      @apply mt-2 block font-bold;
    }
    /* This makes up for the mt-2 in .pos if .pos is not present. */
    :not(.pos) + ol,
    :not(.pos) + .def {
      @apply mt-2;
    }
    p {
      @apply prose;
    }
    .def {
      @apply mb-2 block;
    }
  }
  .btnColor {
    @apply bg-gray-200 hover:bg-gray-300 dark:bg-stone-800 dark:hover:bg-stone-700;
  }
  .btn {
    @apply btnColor fade rounded-md;
  }
}

@layer utilities {
  .link {
    @apply text-indigo-500 dark:text-indigo-300;
    @apply no-underline;
    &:hover {
      @apply underline;
    }
  }
  .fade {
    @apply transition duration-100 ease-in-out;
  }
}
